// <auto-generated />
// ReSharper disable All
using System;
using Android.App;
using Android.Support.V7.Widget;
using Android.Views;
using Android.Widget;
using Android.Support.Design.Widget;
using Toolbar = Android.Support.V7.Widget.Toolbar;
using Android.Support.V4.Widget;

namespace VacationsTracker.Android.Views
{
    public partial class HomeActivityViewHolder
    {
         private readonly Activity activity;

         private SwipeRefreshLayout swipeRefresh;
         private RecyclerView vacationsRecyclerView;
         private FloatingActionButton addVacationButton;
         private Toolbar homeToolbar;
         private Button logoutButton;

        public HomeActivityViewHolder( Activity activity)
        {
            if (activity == null) throw new ArgumentNullException(nameof(activity));

            this.activity = activity;
        }

        
        public SwipeRefreshLayout SwipeRefresh =>
            swipeRefresh ?? (swipeRefresh = activity.FindViewById<SwipeRefreshLayout>(Resource.Id.swipe_refresh));

        
        public RecyclerView VacationsRecyclerView =>
            vacationsRecyclerView ?? (vacationsRecyclerView = activity.FindViewById<RecyclerView>(Resource.Id.vacations_recycler_view));

        
        public FloatingActionButton AddVacationButton =>
            addVacationButton ?? (addVacationButton = activity.FindViewById<FloatingActionButton>(Resource.Id.add_vacation_button));

        
        public Toolbar HomeToolbar =>
            homeToolbar ?? (homeToolbar = activity.FindViewById<Toolbar>(Resource.Id.home_toolbar));

        
        public Button LogoutButton =>
            logoutButton ?? (logoutButton = activity.FindViewById<Button>(Resource.Id.logout_button));
    }

    public partial class LoginActivityViewHolder
    {
         private readonly Activity activity;

         private TextView invalidCredentialLabel;
         private TextInputLayout loginTextInput;
         private TextInputLayout passwordTextInput;
         private Button loginButton;
         private ImageView progressRing;
         private ImageView progressRingSecond;

        public LoginActivityViewHolder( Activity activity)
        {
            if (activity == null) throw new ArgumentNullException(nameof(activity));

            this.activity = activity;
        }

        
        public TextView InvalidCredentialLabel =>
            invalidCredentialLabel ?? (invalidCredentialLabel = activity.FindViewById<TextView>(Resource.Id.invalidCredentialLabel));

        
        public TextInputLayout LoginTextInput =>
            loginTextInput ?? (loginTextInput = activity.FindViewById<TextInputLayout>(Resource.Id.loginTextInput));

        
        public TextInputLayout PasswordTextInput =>
            passwordTextInput ?? (passwordTextInput = activity.FindViewById<TextInputLayout>(Resource.Id.passwordTextInput));

        
        public Button LoginButton =>
            loginButton ?? (loginButton = activity.FindViewById<Button>(Resource.Id.loginButton));

        
        public ImageView ProgressRing =>
            progressRing ?? (progressRing = activity.FindViewById<ImageView>(Resource.Id.progress_ring));

        
        public ImageView ProgressRingSecond =>
            progressRingSecond ?? (progressRingSecond = activity.FindViewById<ImageView>(Resource.Id.progress_ring_second));
    }

    public partial class VacationHeaderCellViewHolder
    {
         private TextView lastUpdateTime;



        
        public TextView LastUpdateTime =>
            lastUpdateTime ?? (lastUpdateTime = ItemView.FindViewById<TextView>(Resource.Id.last_update_time));
    }

    public partial class VacationItemCellViewHolder
    {
         private ImageView vacationTypeImageView;
         private TextView vacationDurationTextView;
         private TextView vacationTypeTextView;
         private TextView vacationStatusTextView;



        
        public ImageView VacationTypeImageView =>
            vacationTypeImageView ?? (vacationTypeImageView = ItemView.FindViewById<ImageView>(Resource.Id.vacationTypeImageView));

        
        public TextView VacationDurationTextView =>
            vacationDurationTextView ?? (vacationDurationTextView = ItemView.FindViewById<TextView>(Resource.Id.vacationDurationTextView));

        
        public TextView VacationTypeTextView =>
            vacationTypeTextView ?? (vacationTypeTextView = ItemView.FindViewById<TextView>(Resource.Id.vacationTypeTextView));

        
        public TextView VacationStatusTextView =>
            vacationStatusTextView ?? (vacationStatusTextView = ItemView.FindViewById<TextView>(Resource.Id.vacationStatusTextView));
    }

}
// ReSharper restore All
